{
    "schema": "olm.package",
    "name": "gatekeeper-operator",
    "defaultChannel": "stable",
    "icon": {
        "base64data": "PHN2ZyBpZD0iZjc0ZTM5ZDEtODA2Yy00M2E0LTgyZGQtZjM3ZjM1NWQ4YWYzIiBkYXRhLW5hbWU9Ikljb24iIHhtbG5zPSJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2ZyIgdmlld0JveD0iMCAwIDM2IDM2Ij4KICA8ZGVmcz4KICAgIDxzdHlsZT4KICAgICAgLmE0MWM1MjM0LWExNGEtNGYzZC05MTYwLTQ0NzJiNzZkMDA0MCB7CiAgICAgICAgZmlsbDogI2UwMDsKICAgICAgfQogICAgPC9zdHlsZT4KICA8L2RlZnM+CiAgPGc+CiAgICA8cGF0aCBjbGFzcz0iYTQxYzUyMzQtYTE0YS00ZjNkLTkxNjAtNDQ3MmI3NmQwMDQwIiBkPSJNMjUsMTcuMzhIMjMuMjNhNS4yNyw1LjI3LDAsMCwwLTEuMDktMi42NGwxLjI1LTEuMjVhLjYyLjYyLDAsMSwwLS44OC0uODhsLTEuMjUsMS4yNWE1LjI3LDUuMjcsMCwwLDAtMi42NC0xLjA5VjExYS42Mi42MiwwLDEsMC0xLjI0LDB2MS43N2E1LjI3LDUuMjcsMCwwLDAtMi42NCwxLjA5bC0xLjI1LTEuMjVhLjYyLjYyLDAsMCwwLS44OC44OGwxLjI1LDEuMjVhNS4yNyw1LjI3LDAsMCwwLTEuMDksMi42NEgxMWEuNjIuNjIsMCwwLDAsMCwxLjI0aDEuNzdhNS4yNyw1LjI3LDAsMCwwLDEuMDksMi42NGwtMS4yNSwxLjI1YS42MS42MSwwLDAsMCwwLC44OC42My42MywwLDAsMCwuODgsMGwxLjI1LTEuMjVhNS4yNyw1LjI3LDAsMCwwLDIuNjQsMS4wOVYyNWEuNjIuNjIsMCwwLDAsMS4yNCwwVjIzLjIzYTUuMjcsNS4yNywwLDAsMCwyLjY0LTEuMDlsMS4yNSwxLjI1YS42My42MywwLDAsMCwuODgsMCwuNjEuNjEsMCwwLDAsMC0uODhsLTEuMjUtMS4yNWE1LjI3LDUuMjcsMCwwLDAsMS4wOS0yLjY0SDI1YS42Mi42MiwwLDAsMCwwLTEuMjRabS03LDQuNjhBNC4wNiw0LjA2LDAsMSwxLDIyLjA2LDE4LDQuMDYsNC4wNiwwLDAsMSwxOCwyMi4wNloiLz4KICAgIDxwYXRoIGNsYXNzPSJhNDFjNTIzNC1hMTRhLTRmM2QtOTE2MC00NDcyYjc2ZDAwNDAiIGQ9Ik0yNy45LDI4LjUyYS42Mi42MiwwLDAsMS0uNDQtLjE4LjYxLjYxLDAsMCwxLDAtLjg4LDEzLjQyLDEzLjQyLDAsMCwwLDIuNjMtMTUuMTkuNjEuNjEsMCwwLDEsLjMtLjgzLjYyLjYyLDAsMCwxLC44My4yOSwxNC42NywxNC42NywwLDAsMS0yLjg4LDE2LjYxQS42Mi42MiwwLDAsMSwyNy45LDI4LjUyWiIvPgogICAgPHBhdGggY2xhc3M9ImE0MWM1MjM0LWExNGEtNGYzZC05MTYwLTQ0NzJiNzZkMDA0MCIgZD0iTTI3LjksOC43M2EuNjMuNjMsMCwwLDEtLjQ0LS4xOUExMy40LDEzLjQsMCwwLDAsMTIuMjcsNS45MWEuNjEuNjEsMCwwLDEtLjgzLS4zLjYyLjYyLDAsMCwxLC4yOS0uODNBMTQuNjcsMTQuNjcsMCwwLDEsMjguMzQsNy42NmEuNjMuNjMsMCwwLDEtLjQ0LDEuMDdaIi8+CiAgICA8cGF0aCBjbGFzcz0iYTQxYzUyMzQtYTE0YS00ZjNkLTkxNjAtNDQ3MmI3NmQwMDQwIiBkPSJNNS4zNSwyNC42MmEuNjMuNjMsMCwwLDEtLjU3LS4zNUExNC42NywxNC42NywwLDAsMSw3LjY2LDcuNjZhLjYyLjYyLDAsMCwxLC44OC44OEExMy40MiwxMy40MiwwLDAsMCw1LjkxLDIzLjczYS42MS42MSwwLDAsMS0uMy44M0EuNDguNDgsMCwwLDEsNS4zNSwyNC42MloiLz4KICAgIDxwYXRoIGNsYXNzPSJhNDFjNTIzNC1hMTRhLTRmM2QtOTE2MC00NDcyYjc2ZDAwNDAiIGQ9Ik0xOCwzMi42MkExNC42NCwxNC42NCwwLDAsMSw3LjY2LDI4LjM0YS42My42MywwLDAsMSwwLS44OC42MS42MSwwLDAsMSwuODgsMCwxMy40MiwxMy40MiwwLDAsMCwxNS4xOSwyLjYzLjYxLjYxLDAsMCwxLC44My4zLjYyLjYyLDAsMCwxLS4yOS44M0ExNC42NywxNC42NywwLDAsMSwxOCwzMi42MloiLz4KICAgIDxwYXRoIGNsYXNzPSJhNDFjNTIzNC1hMTRhLTRmM2QtOTE2MC00NDcyYjc2ZDAwNDAiIGQ9Ik0zMCwyOS42MkgyN2EuNjIuNjIsMCwwLDEtLjYyLS42MlYyNmEuNjIuNjIsMCwwLDEsMS4yNCwwdjIuMzhIMzBhLjYyLjYyLDAsMCwxLDAsMS4yNFoiLz4KICAgIDxwYXRoIGNsYXNzPSJhNDFjNTIzNC1hMTRhLTRmM2QtOTE2MC00NDcyYjc2ZDAwNDAiIGQ9Ik03LDMwLjYyQS42Mi42MiwwLDAsMSw2LjM4LDMwVjI3QS42Mi42MiwwLDAsMSw3LDI2LjM4aDNhLjYyLjYyLDAsMCwxLDAsMS4yNEg3LjYyVjMwQS42Mi42MiwwLDAsMSw3LDMwLjYyWiIvPgogICAgPHBhdGggY2xhc3M9ImE0MWM1MjM0LWExNGEtNGYzZC05MTYwLTQ0NzJiNzZkMDA0MCIgZD0iTTI5LDkuNjJIMjZhLjYyLjYyLDAsMCwxLDAtMS4yNGgyLjM4VjZhLjYyLjYyLDAsMCwxLDEuMjQsMFY5QS42Mi42MiwwLDAsMSwyOSw5LjYyWiIvPgogICAgPHBhdGggY2xhc3M9ImE0MWM1MjM0LWExNGEtNGYzZC05MTYwLTQ0NzJiNzZkMDA0MCIgZD0iTTksMTAuNjJBLjYyLjYyLDAsMCwxLDguMzgsMTBWNy42Mkg2QS42Mi42MiwwLDAsMSw2LDYuMzhIOUEuNjIuNjIsMCwwLDEsOS42Miw3djNBLjYyLjYyLDAsMCwxLDksMTAuNjJaIi8+CiAgPC9nPgo8L3N2Zz4K",
        "mediatype": "image/svg+xml"
    }
}
{
    "schema": "olm.channel",
    "name": "3.11",
    "package": "gatekeeper-operator",
    "entries": [
        {
            "name": "gatekeeper-operator.v3.11.1",
            "skipRange": "<3.11.1"
        },
        {
            "name": "gatekeeper-operator.v3.11.2",
            "replaces": "gatekeeper-operator.v3.11.1",
            "skipRange": "<3.11.0"
        }
    ]
}
{
    "schema": "olm.channel",
    "name": "3.14",
    "package": "gatekeeper-operator",
    "entries": [
        {
            "name": "gatekeeper-operator.v3.14.0",
            "skipRange": "<3.14.0"
        },
        {
            "name": "gatekeeper-operator.v3.14.1",
            "replaces": "gatekeeper-operator.v3.14.0",
            "skipRange": "<3.14.0"
        }
    ]
}
{
    "schema": "olm.channel",
    "name": "stable",
    "package": "gatekeeper-operator",
    "entries": [
        {
            "name": "gatekeeper-operator.v3.11.2",
            "skipRange": "<3.11.0"
        },
        {
            "name": "gatekeeper-operator.v3.14.0",
            "replaces": "gatekeeper-operator.v3.11.2",
            "skipRange": "<3.14.0"
        },
        {
            "name": "gatekeeper-operator.v3.14.1",
            "replaces": "gatekeeper-operator.v3.14.0",
            "skipRange": "<3.14.0"
        }
    ]
}
{
    "schema": "olm.bundle",
    "name": "gatekeeper-operator.v3.11.1",
    "package": "gatekeeper-operator",
    "image": "quay.io/gatekeeper/gatekeeper-operator-bundle:v3.11.1",
    "properties": [
        {
            "type": "olm.gvk",
            "value": {
                "group": "operator.gatekeeper.sh",
                "kind": "Gatekeeper",
                "version": "v1alpha1"
            }
        },
        {
            "type": "olm.package",
            "value": {
                "packageName": "gatekeeper-operator",
                "version": "3.11.1"
            }
        },
        {
            "type": "olm.bundle.object",
            "value": {
                "data": ""
            }
        },
        {
            "type": "olm.bundle.object",
            "value": {
                "data": ""
            }
        },
        {
            "type": "olm.bundle.object",
            "value": {
                "data": "eyJhcGlWZXJzaW9uIjoicmJhYy5hdXRob3JpemF0aW9uLms4cy5pby92MSIsImtpbmQiOiJDbHVzdGVyUm9sZSIsIm1ldGFkYXRhIjp7ImNyZWF0aW9uVGltZXN0YW1wIjpudWxsLCJsYWJlbHMiOnsiY29udHJvbC1wbGFuZSI6ImdhdGVrZWVwZXItb3BlcmF0b3ItY29udHJvbGxlci1tYW5hZ2VyIn0sIm5hbWUiOiJnYXRla2VlcGVyLW9wZXJhdG9yLW1ldHJpY3MtcmVhZGVyIn0sInJ1bGVzIjpbeyJub25SZXNvdXJjZVVSTHMiOlsiL21ldHJpY3MiXSwidmVyYnMiOlsiZ2V0Il19XX0="
            }
        },
        {
            "type": "olm.bundle.object",
            "value": {
                "data": "eyJhcGlWZXJzaW9uIjoidjEiLCJraW5kIjoiU2VydmljZSIsIm1ldGFkYXRhIjp7ImNyZWF0aW9uVGltZXN0YW1wIjpudWxsLCJsYWJlbHMiOnsiY29udHJvbC1wbGFuZSI6ImdhdGVrZWVwZXItb3BlcmF0b3ItY29udHJvbGxlci1tYW5hZ2VyIn0sIm5hbWUiOiJnYXRla2VlcGVyLW9wZXJhdG9yLWNvbnRyb2xsZXItbWFuYWdlci1tZXRyaWNzLXNlcnZpY2UifSwic3BlYyI6eyJwb3J0cyI6W3sibmFtZSI6Imh0dHBzIiwicG9ydCI6ODQ0MywicHJvdG9jb2wiOiJUQ1AiLCJ0YXJnZXRQb3J0IjoiaHR0cHMifV0sInNlbGVjdG9yIjp7ImNvbnRyb2wtcGxhbmUiOiJnYXRla2VlcGVyLW9wZXJhdG9yLWNvbnRyb2xsZXItbWFuYWdlciJ9fSwic3RhdHVzIjp7ImxvYWRCYWxhbmNlciI6e319fQ=="
            }
        }
    ],
    "relatedImages": [
        {
            "name": "",
            "image": "gcr.io/kubebuilder/kube-rbac-proxy:v0.8.0"
        },
        {
            "name": "gatekeeper",
            "image": "openpolicyagent/gatekeeper:v3.11.1"
        },
        {
            "name": "",
            "image": "quay.io/gatekeeper/gatekeeper-operator-bundle:v3.11.1"
        },
        {
            "name": "",
            "image": "quay.io/gatekeeper/gatekeeper-operator:v3.11.1"
        }
    ]
}
{
    "schema": "olm.bundle",
    "name": "gatekeeper-operator.v3.11.2",
    "package": "gatekeeper-operator",
    "image": "quay.io/gatekeeper/gatekeeper-operator-bundle:v3.11.2",
    "properties": [
        {
            "type": "olm.gvk",
            "value": {
                "group": "operator.gatekeeper.sh",
                "kind": "Gatekeeper",
                "version": "v1alpha1"
            }
        },
        {
            "type": "olm.package",
            "value": {
                "packageName": "gatekeeper-operator",
                "version": "3.11.2"
            }
        },
        {
            "type": "olm.bundle.object",
            "value": {
                "data": ""
            }
        },
        {
            "type": "olm.bundle.object",
            "value": {
                "data": ""
            }
        },
        {
            "type": "olm.bundle.object",
            "value": {
                "data": "eyJhcGlWZXJzaW9uIjoicmJhYy5hdXRob3JpemF0aW9uLms4cy5pby92MSIsImtpbmQiOiJDbHVzdGVyUm9sZSIsIm1ldGFkYXRhIjp7ImNyZWF0aW9uVGltZXN0YW1wIjpudWxsLCJsYWJlbHMiOnsiY29udHJvbC1wbGFuZSI6ImdhdGVrZWVwZXItb3BlcmF0b3ItY29udHJvbGxlci1tYW5hZ2VyIn0sIm5hbWUiOiJnYXRla2VlcGVyLW9wZXJhdG9yLW1ldHJpY3MtcmVhZGVyIn0sInJ1bGVzIjpbeyJub25SZXNvdXJjZVVSTHMiOlsiL21ldHJpY3MiXSwidmVyYnMiOlsiZ2V0Il19XX0="
            }
        },
        {
            "type": "olm.bundle.object",
            "value": {
                "data": "eyJhcGlWZXJzaW9uIjoidjEiLCJraW5kIjoiU2VydmljZSIsIm1ldGFkYXRhIjp7ImNyZWF0aW9uVGltZXN0YW1wIjpudWxsLCJsYWJlbHMiOnsiY29udHJvbC1wbGFuZSI6ImdhdGVrZWVwZXItb3BlcmF0b3ItY29udHJvbGxlci1tYW5hZ2VyIn0sIm5hbWUiOiJnYXRla2VlcGVyLW9wZXJhdG9yLWNvbnRyb2xsZXItbWFuYWdlci1tZXRyaWNzLXNlcnZpY2UifSwic3BlYyI6eyJwb3J0cyI6W3sibmFtZSI6Imh0dHBzIiwicG9ydCI6ODQ0MywicHJvdG9jb2wiOiJUQ1AiLCJ0YXJnZXRQb3J0IjoiaHR0cHMifV0sInNlbGVjdG9yIjp7ImNvbnRyb2wtcGxhbmUiOiJnYXRla2VlcGVyLW9wZXJhdG9yLWNvbnRyb2xsZXItbWFuYWdlciJ9fSwic3RhdHVzIjp7ImxvYWRCYWxhbmNlciI6e319fQ=="
            }
        }
    ],
    "relatedImages": [
        {
            "name": "",
            "image": "gcr.io/kubebuilder/kube-rbac-proxy:v0.8.0"
        },
        {
            "name": "gatekeeper",
            "image": "openpolicyagent/gatekeeper:v3.11.1"
        },
        {
            "name": "",
            "image": "quay.io/gatekeeper/gatekeeper-operator-bundle:v3.11.2"
        },
        {
            "name": "",
            "image": "quay.io/gatekeeper/gatekeeper-operator:v3.11.2"
        }
    ]
}
{
    "schema": "olm.bundle",
    "name": "gatekeeper-operator.v3.14.0",
    "package": "gatekeeper-operator",
    "image": "quay.io/gatekeeper/gatekeeper-operator-bundle:v3.14.0",
    "properties": [
        {
            "type": "olm.gvk",
            "value": {
                "group": "operator.gatekeeper.sh",
                "kind": "Gatekeeper",
                "version": "v1alpha1"
            }
        },
        {
            "type": "olm.package",
            "value": {
                "packageName": "gatekeeper-operator",
                "version": "3.14.0"
            }
        },
        {
            "type": "olm.bundle.object",
            "value": {
                "data": ""
            }
        },
        {
            "type": "olm.bundle.object",
            "value": {
                "data": ""
            }
        },
        {
            "type": "olm.bundle.object",
            "value": {
                "data": "eyJhcGlWZXJzaW9uIjoicmJhYy5hdXRob3JpemF0aW9uLms4cy5pby92MSIsImtpbmQiOiJDbHVzdGVyUm9sZSIsIm1ldGFkYXRhIjp7ImNyZWF0aW9uVGltZXN0YW1wIjpudWxsLCJsYWJlbHMiOnsiY29udHJvbC1wbGFuZSI6ImdhdGVrZWVwZXItb3BlcmF0b3ItY29udHJvbGxlci1tYW5hZ2VyIn0sIm5hbWUiOiJnYXRla2VlcGVyLW9wZXJhdG9yLW1ldHJpY3MtcmVhZGVyIn0sInJ1bGVzIjpbeyJub25SZXNvdXJjZVVSTHMiOlsiL21ldHJpY3MiXSwidmVyYnMiOlsiZ2V0Il19XX0="
            }
        },
        {
            "type": "olm.bundle.object",
            "value": {
                "data": "eyJhcGlWZXJzaW9uIjoidjEiLCJraW5kIjoiU2VydmljZSIsIm1ldGFkYXRhIjp7ImNyZWF0aW9uVGltZXN0YW1wIjpudWxsLCJsYWJlbHMiOnsiY29udHJvbC1wbGFuZSI6ImdhdGVrZWVwZXItb3BlcmF0b3ItY29udHJvbGxlci1tYW5hZ2VyIn0sIm5hbWUiOiJnYXRla2VlcGVyLW9wZXJhdG9yLWNvbnRyb2xsZXItbWFuYWdlci1tZXRyaWNzLXNlcnZpY2UifSwic3BlYyI6eyJwb3J0cyI6W3sibmFtZSI6Imh0dHBzIiwicG9ydCI6ODQ0MywicHJvdG9jb2wiOiJUQ1AiLCJ0YXJnZXRQb3J0IjoiaHR0cHMifV0sInNlbGVjdG9yIjp7ImNvbnRyb2wtcGxhbmUiOiJnYXRla2VlcGVyLW9wZXJhdG9yLWNvbnRyb2xsZXItbWFuYWdlciJ9fSwic3RhdHVzIjp7ImxvYWRCYWxhbmNlciI6e319fQ=="
            }
        }
    ],
    "relatedImages": [
        {
            "name": "",
            "image": "gcr.io/kubebuilder/kube-rbac-proxy:v0.8.0"
        },
        {
            "name": "gatekeeper",
            "image": "openpolicyagent/gatekeeper:v3.14.0"
        },
        {
            "name": "",
            "image": "quay.io/gatekeeper/gatekeeper-operator-bundle:v3.14.0"
        },
        {
            "name": "",
            "image": "quay.io/gatekeeper/gatekeeper-operator:v3.14.0"
        }
    ]
}
{
    "schema": "olm.bundle",
    "name": "gatekeeper-operator.v3.14.1",
    "package": "gatekeeper-operator",
    "image": "quay.io/gatekeeper/gatekeeper-operator-bundle:v3.14.1",
    "properties": [
        {
            "type": "olm.gvk",
            "value": {
                "group": "operator.gatekeeper.sh",
                "kind": "Gatekeeper",
                "version": "v1alpha1"
            }
        },
        {
            "type": "olm.package",
            "value": {
                "packageName": "gatekeeper-operator",
                "version": "3.14.1"
            }
        },
        {
            "type": "olm.bundle.object",
            "value": {
                "data": ""
            }
        },
        {
            "type": "olm.bundle.object",
            "value": {
                "data": ""
            }
        },
        {
            "type": "olm.bundle.object",
            "value": {
                "data": "eyJhcGlWZXJzaW9uIjoicmJhYy5hdXRob3JpemF0aW9uLms4cy5pby92MSIsImtpbmQiOiJDbHVzdGVyUm9sZSIsIm1ldGFkYXRhIjp7ImNyZWF0aW9uVGltZXN0YW1wIjpudWxsLCJsYWJlbHMiOnsiY29udHJvbC1wbGFuZSI6ImdhdGVrZWVwZXItb3BlcmF0b3ItY29udHJvbGxlci1tYW5hZ2VyIn0sIm5hbWUiOiJnYXRla2VlcGVyLW9wZXJhdG9yLW1ldHJpY3MtcmVhZGVyIn0sInJ1bGVzIjpbeyJub25SZXNvdXJjZVVSTHMiOlsiL21ldHJpY3MiXSwidmVyYnMiOlsiZ2V0Il19XX0="
            }
        },
        {
            "type": "olm.bundle.object",
            "value": {
                "data": "eyJhcGlWZXJzaW9uIjoidjEiLCJraW5kIjoiU2VydmljZSIsIm1ldGFkYXRhIjp7ImNyZWF0aW9uVGltZXN0YW1wIjpudWxsLCJsYWJlbHMiOnsiY29udHJvbC1wbGFuZSI6ImdhdGVrZWVwZXItb3BlcmF0b3ItY29udHJvbGxlci1tYW5hZ2VyIn0sIm5hbWUiOiJnYXRla2VlcGVyLW9wZXJhdG9yLWNvbnRyb2xsZXItbWFuYWdlci1tZXRyaWNzLXNlcnZpY2UifSwic3BlYyI6eyJwb3J0cyI6W3sibmFtZSI6Imh0dHBzIiwicG9ydCI6ODQ0MywicHJvdG9jb2wiOiJUQ1AiLCJ0YXJnZXRQb3J0IjoiaHR0cHMifV0sInNlbGVjdG9yIjp7ImNvbnRyb2wtcGxhbmUiOiJnYXRla2VlcGVyLW9wZXJhdG9yLWNvbnRyb2xsZXItbWFuYWdlciJ9fSwic3RhdHVzIjp7ImxvYWRCYWxhbmNlciI6e319fQ=="
            }
        }
    ],
    "relatedImages": [
        {
            "name": "",
            "image": "gcr.io/kubebuilder/kube-rbac-proxy:v0.8.0"
        },
        {
            "name": "gatekeeper",
            "image": "openpolicyagent/gatekeeper:v3.14.1"
        },
        {
            "name": "",
            "image": "quay.io/gatekeeper/gatekeeper-operator-bundle:v3.14.1"
        },
        {
            "name": "",
            "image": "quay.io/gatekeeper/gatekeeper-operator:v3.14.1"
        }
    ]
}
